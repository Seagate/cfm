/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package redfishapi

import (
	"time"
)

// PcieDeviceV1130CxlDevice - The CXL-specific properties of a PCIe device.
type PcieDeviceV1130CxlDevice struct {
	DeviceType PcieDeviceV1130CxlDeviceType `json:"DeviceType,omitempty"`

	DynamicCapacity PcieDeviceV1130CxlDynamicCapacity `json:"DynamicCapacity,omitempty"`

	// Indicates whether the CXL device supports egress port congestion management.
	EgressPortCongestionSupport *bool `json:"EgressPortCongestionSupport,omitempty"`

	// The maximum number of logical devices supported by this CXL device.
	MaxNumberLogicalDevices *int64 `json:"MaxNumberLogicalDevices,omitempty"`

	// Indicates whether the CXL device supports throughput reduction.
	ThroughputReductionSupport *bool `json:"ThroughputReductionSupport,omitempty"`

	// The timestamp set on the CXL device.
	Timestamp time.Time `json:"Timestamp,omitempty"`
}

// AssertPcieDeviceV1130CxlDeviceRequired checks if the required fields are not zero-ed
func AssertPcieDeviceV1130CxlDeviceRequired(obj PcieDeviceV1130CxlDevice) error {
	if err := AssertPcieDeviceV1130CxlDynamicCapacityRequired(obj.DynamicCapacity); err != nil {
		return err
	}
	return nil
}

// AssertPcieDeviceV1130CxlDeviceConstraints checks if the values respects the defined constraints
func AssertPcieDeviceV1130CxlDeviceConstraints(obj PcieDeviceV1130CxlDevice) error {
	return nil
}
