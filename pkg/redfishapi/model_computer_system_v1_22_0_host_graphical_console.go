/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package redfishapi

import (
	"errors"
)

// ComputerSystemV1220HostGraphicalConsole - The information about a graphical console service for this system.
type ComputerSystemV1220HostGraphicalConsole struct {

	// This property enumerates the graphical console connection types that the implementation allows.
	ConnectTypesSupported []ComputerSystemV1220GraphicalConnectTypesSupported `json:"ConnectTypesSupported,omitempty"`

	// The maximum number of service sessions, regardless of protocol, that this system can support.
	MaxConcurrentSessions int64 `json:"MaxConcurrentSessions,omitempty"`

	// The protocol port.
	Port *int64 `json:"Port,omitempty"`

	// An indication of whether the service is enabled for this system.
	ServiceEnabled bool `json:"ServiceEnabled,omitempty"`
}

// AssertComputerSystemV1220HostGraphicalConsoleRequired checks if the required fields are not zero-ed
func AssertComputerSystemV1220HostGraphicalConsoleRequired(obj ComputerSystemV1220HostGraphicalConsole) error {
	return nil
}

// AssertComputerSystemV1220HostGraphicalConsoleConstraints checks if the values respects the defined constraints
func AssertComputerSystemV1220HostGraphicalConsoleConstraints(obj ComputerSystemV1220HostGraphicalConsole) error {
	if obj.MaxConcurrentSessions < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Port != nil && *obj.Port < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
