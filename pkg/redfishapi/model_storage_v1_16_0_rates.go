/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package redfishapi

import (
	"errors"
)

// StorageV1160Rates - This type describes the various controller rates used for processes such as volume rebuild or consistency checks.
type StorageV1160Rates struct {

	// The percentage of controller resources used for performing a data consistency check on volumes.
	ConsistencyCheckRatePercent *int64 `json:"ConsistencyCheckRatePercent,omitempty"`

	// The percentage of controller resources used for rebuilding/repairing volumes.
	RebuildRatePercent *int64 `json:"RebuildRatePercent,omitempty"`

	// The percentage of controller resources used for transforming volumes from one configuration to another.
	TransformationRatePercent *int64 `json:"TransformationRatePercent,omitempty"`
}

// AssertStorageV1160RatesRequired checks if the required fields are not zero-ed
func AssertStorageV1160RatesRequired(obj StorageV1160Rates) error {
	return nil
}

// AssertStorageV1160RatesConstraints checks if the values respects the defined constraints
func AssertStorageV1160RatesConstraints(obj StorageV1160Rates) error {
	if obj.ConsistencyCheckRatePercent != nil && *obj.ConsistencyCheckRatePercent < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.ConsistencyCheckRatePercent != nil && *obj.ConsistencyCheckRatePercent > 100 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	if obj.RebuildRatePercent != nil && *obj.RebuildRatePercent < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.RebuildRatePercent != nil && *obj.RebuildRatePercent > 100 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	if obj.TransformationRatePercent != nil && *obj.TransformationRatePercent < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.TransformationRatePercent != nil && *obj.TransformationRatePercent > 100 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
