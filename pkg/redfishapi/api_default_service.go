/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package redfishapi

import (
	"context"
	"errors"
	"net/http"
)

// DefaultAPIService is a service that implements the logic for the DefaultAPIServicer
// This service should implement the business logic for every endpoint for the DefaultAPI API.
// Include any external packages or services that will be required by this service.
type DefaultAPIService struct {
}

// NewDefaultAPIService creates a default api service
func NewDefaultAPIService() DefaultAPIServicer {
	return &DefaultAPIService{}
}

// RedfishGet -
func (s *DefaultAPIService) RedfishGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update RedfishGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, string{}) or use other options such as http.Ok ...
	// return Response(200, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishGet method not implemented")
}

// RedfishV1AccountServiceAccountsGet -
func (s *DefaultAPIService) RedfishV1AccountServiceAccountsGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServiceAccountsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ManagerAccountCollectionManagerAccountCollection{}) or use other options such as http.Ok ...
	// return Response(200, ManagerAccountCollectionManagerAccountCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServiceAccountsGet method not implemented")
}

// RedfishV1AccountServiceAccountsManagerAccountIdDelete -
func (s *DefaultAPIService) RedfishV1AccountServiceAccountsManagerAccountIdDelete(ctx context.Context, managerAccountId string) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServiceAccountsManagerAccountIdDelete with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ManagerAccountV1120ManagerAccount{}) or use other options such as http.Ok ...
	// return Response(200, ManagerAccountV1120ManagerAccount{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServiceAccountsManagerAccountIdDelete method not implemented")
}

// RedfishV1AccountServiceAccountsManagerAccountIdGet -
func (s *DefaultAPIService) RedfishV1AccountServiceAccountsManagerAccountIdGet(ctx context.Context, managerAccountId string) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServiceAccountsManagerAccountIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ManagerAccountV1120ManagerAccount{}) or use other options such as http.Ok ...
	// return Response(200, ManagerAccountV1120ManagerAccount{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServiceAccountsManagerAccountIdGet method not implemented")
}

// RedfishV1AccountServiceAccountsManagerAccountIdPatch -
func (s *DefaultAPIService) RedfishV1AccountServiceAccountsManagerAccountIdPatch(ctx context.Context, managerAccountId string, managerAccountV1120ManagerAccount ManagerAccountV1120ManagerAccount) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServiceAccountsManagerAccountIdPatch with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ManagerAccountV1120ManagerAccount{}) or use other options such as http.Ok ...
	// return Response(200, ManagerAccountV1120ManagerAccount{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServiceAccountsManagerAccountIdPatch method not implemented")
}

// RedfishV1AccountServiceAccountsManagerAccountIdPut -
func (s *DefaultAPIService) RedfishV1AccountServiceAccountsManagerAccountIdPut(ctx context.Context, managerAccountId string, managerAccountV1120ManagerAccount ManagerAccountV1120ManagerAccount) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServiceAccountsManagerAccountIdPut with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ManagerAccountV1120ManagerAccount{}) or use other options such as http.Ok ...
	// return Response(200, ManagerAccountV1120ManagerAccount{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServiceAccountsManagerAccountIdPut method not implemented")
}

// RedfishV1AccountServiceAccountsPost -
func (s *DefaultAPIService) RedfishV1AccountServiceAccountsPost(ctx context.Context, managerAccountV1120ManagerAccount ManagerAccountV1120ManagerAccount) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServiceAccountsPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, ManagerAccountV1120ManagerAccount{}) or use other options such as http.Ok ...
	// return Response(201, ManagerAccountV1120ManagerAccount{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServiceAccountsPost method not implemented")
}

// RedfishV1AccountServiceGet -
func (s *DefaultAPIService) RedfishV1AccountServiceGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServiceGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AccountServiceV1150AccountService{}) or use other options such as http.Ok ...
	// return Response(200, AccountServiceV1150AccountService{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServiceGet method not implemented")
}

// RedfishV1AccountServicePatch -
func (s *DefaultAPIService) RedfishV1AccountServicePatch(ctx context.Context, accountServiceV1150AccountService AccountServiceV1150AccountService) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServicePatch with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AccountServiceV1150AccountService{}) or use other options such as http.Ok ...
	// return Response(200, AccountServiceV1150AccountService{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServicePatch method not implemented")
}

// RedfishV1AccountServicePut -
func (s *DefaultAPIService) RedfishV1AccountServicePut(ctx context.Context, accountServiceV1150AccountService AccountServiceV1150AccountService) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServicePut with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AccountServiceV1150AccountService{}) or use other options such as http.Ok ...
	// return Response(200, AccountServiceV1150AccountService{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServicePut method not implemented")
}

// RedfishV1AccountServiceRolesGet -
func (s *DefaultAPIService) RedfishV1AccountServiceRolesGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServiceRolesGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, RoleCollectionRoleCollection{}) or use other options such as http.Ok ...
	// return Response(200, RoleCollectionRoleCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServiceRolesGet method not implemented")
}

// RedfishV1AccountServiceRolesPost -
func (s *DefaultAPIService) RedfishV1AccountServiceRolesPost(ctx context.Context, roleV131Role RoleV131Role) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServiceRolesPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, RoleV131Role{}) or use other options such as http.Ok ...
	// return Response(201, RoleV131Role{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServiceRolesPost method not implemented")
}

// RedfishV1AccountServiceRolesRoleIdDelete -
func (s *DefaultAPIService) RedfishV1AccountServiceRolesRoleIdDelete(ctx context.Context, roleId string) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServiceRolesRoleIdDelete with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, RoleV131Role{}) or use other options such as http.Ok ...
	// return Response(200, RoleV131Role{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServiceRolesRoleIdDelete method not implemented")
}

// RedfishV1AccountServiceRolesRoleIdGet -
func (s *DefaultAPIService) RedfishV1AccountServiceRolesRoleIdGet(ctx context.Context, roleId string) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServiceRolesRoleIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, RoleV131Role{}) or use other options such as http.Ok ...
	// return Response(200, RoleV131Role{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServiceRolesRoleIdGet method not implemented")
}

// RedfishV1AccountServiceRolesRoleIdPatch -
func (s *DefaultAPIService) RedfishV1AccountServiceRolesRoleIdPatch(ctx context.Context, roleId string, roleV131Role RoleV131Role) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServiceRolesRoleIdPatch with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, RoleV131Role{}) or use other options such as http.Ok ...
	// return Response(200, RoleV131Role{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServiceRolesRoleIdPatch method not implemented")
}

// RedfishV1AccountServiceRolesRoleIdPut -
func (s *DefaultAPIService) RedfishV1AccountServiceRolesRoleIdPut(ctx context.Context, roleId string, roleV131Role RoleV131Role) (ImplResponse, error) {
	// TODO - update RedfishV1AccountServiceRolesRoleIdPut with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, RoleV131Role{}) or use other options such as http.Ok ...
	// return Response(200, RoleV131Role{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1AccountServiceRolesRoleIdPut method not implemented")
}

// RedfishV1ChassisChassisIdGet -
func (s *DefaultAPIService) RedfishV1ChassisChassisIdGet(ctx context.Context, chassisId string) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisChassisIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ChassisV1250Chassis{}) or use other options such as http.Ok ...
	// return Response(200, ChassisV1250Chassis{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisChassisIdGet method not implemented")
}

// RedfishV1ChassisChassisIdMemoryDomainsGet -
func (s *DefaultAPIService) RedfishV1ChassisChassisIdMemoryDomainsGet(ctx context.Context, chassisId string) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisChassisIdMemoryDomainsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, MemoryDomainCollectionMemoryDomainCollection{}) or use other options such as http.Ok ...
	// return Response(200, MemoryDomainCollectionMemoryDomainCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisChassisIdMemoryDomainsGet method not implemented")
}

// RedfishV1ChassisChassisIdMemoryDomainsMemoryDomainIdGet -
func (s *DefaultAPIService) RedfishV1ChassisChassisIdMemoryDomainsMemoryDomainIdGet(ctx context.Context, chassisId string, memoryDomainId string) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisChassisIdMemoryDomainsMemoryDomainIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, MemoryDomainV150MemoryDomain{}) or use other options such as http.Ok ...
	// return Response(200, MemoryDomainV150MemoryDomain{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisChassisIdMemoryDomainsMemoryDomainIdGet method not implemented")
}

// RedfishV1ChassisChassisIdMemoryDomainsMemoryDomainIdMemoryChunksGet -
func (s *DefaultAPIService) RedfishV1ChassisChassisIdMemoryDomainsMemoryDomainIdMemoryChunksGet(ctx context.Context, chassisId string, memoryDomainId string) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisChassisIdMemoryDomainsMemoryDomainIdMemoryChunksGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, MemoryChunksCollectionMemoryChunksCollection{}) or use other options such as http.Ok ...
	// return Response(200, MemoryChunksCollectionMemoryChunksCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisChassisIdMemoryDomainsMemoryDomainIdMemoryChunksGet method not implemented")
}

// RedfishV1ChassisChassisIdMemoryDomainsMemoryDomainIdMemoryChunksMemoryChunksIdGet -
func (s *DefaultAPIService) RedfishV1ChassisChassisIdMemoryDomainsMemoryDomainIdMemoryChunksMemoryChunksIdGet(ctx context.Context, chassisId string, memoryDomainId string, memoryChunksId string) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisChassisIdMemoryDomainsMemoryDomainIdMemoryChunksMemoryChunksIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, MemoryChunksV161MemoryChunks{}) or use other options such as http.Ok ...
	// return Response(200, MemoryChunksV161MemoryChunks{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisChassisIdMemoryDomainsMemoryDomainIdMemoryChunksMemoryChunksIdGet method not implemented")
}

// RedfishV1ChassisChassisIdMemoryGet -
func (s *DefaultAPIService) RedfishV1ChassisChassisIdMemoryGet(ctx context.Context, chassisId string) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisChassisIdMemoryGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, MemoryCollectionMemoryCollection{}) or use other options such as http.Ok ...
	// return Response(200, MemoryCollectionMemoryCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisChassisIdMemoryGet method not implemented")
}

// RedfishV1ChassisChassisIdMemoryMemoryIdGet -
func (s *DefaultAPIService) RedfishV1ChassisChassisIdMemoryMemoryIdGet(ctx context.Context, chassisId string, memoryId string) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisChassisIdMemoryMemoryIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, MemoryV1190Memory{}) or use other options such as http.Ok ...
	// return Response(200, MemoryV1190Memory{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisChassisIdMemoryMemoryIdGet method not implemented")
}

// RedfishV1ChassisChassisIdPCIeDevicesGet -
func (s *DefaultAPIService) RedfishV1ChassisChassisIdPCIeDevicesGet(ctx context.Context, chassisId string) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisChassisIdPCIeDevicesGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PcieDeviceCollectionPcieDeviceCollection{}) or use other options such as http.Ok ...
	// return Response(200, PcieDeviceCollectionPcieDeviceCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisChassisIdPCIeDevicesGet method not implemented")
}

// RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdCXLLogicalDevicesCXLLogicalDeviceIdGet -
func (s *DefaultAPIService) RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdCXLLogicalDevicesCXLLogicalDeviceIdGet(ctx context.Context, chassisId string, pCIeDeviceId string, cXLLogicalDeviceId string) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdCXLLogicalDevicesCXLLogicalDeviceIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CxlLogicalDeviceV111CxlLogicalDevice{}) or use other options such as http.Ok ...
	// return Response(200, CxlLogicalDeviceV111CxlLogicalDevice{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdCXLLogicalDevicesCXLLogicalDeviceIdGet method not implemented")
}

// RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdCXLLogicalDevicesGet -
func (s *DefaultAPIService) RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdCXLLogicalDevicesGet(ctx context.Context, chassisId string, pCIeDeviceId string) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdCXLLogicalDevicesGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CxlLogicalDeviceCollectionCxlLogicalDeviceCollection{}) or use other options such as http.Ok ...
	// return Response(200, CxlLogicalDeviceCollectionCxlLogicalDeviceCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdCXLLogicalDevicesGet method not implemented")
}

// RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdGet -
func (s *DefaultAPIService) RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdGet(ctx context.Context, chassisId string, pCIeDeviceId string) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PcieDeviceV1130PcieDevice{}) or use other options such as http.Ok ...
	// return Response(200, PcieDeviceV1130PcieDevice{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdGet method not implemented")
}

// RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdPCIeFunctionsGet -
func (s *DefaultAPIService) RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdPCIeFunctionsGet(ctx context.Context, chassisId string, pCIeDeviceId string) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdPCIeFunctionsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PcieFunctionCollectionPcieFunctionCollection{}) or use other options such as http.Ok ...
	// return Response(200, PcieFunctionCollectionPcieFunctionCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdPCIeFunctionsGet method not implemented")
}

// RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdPCIeFunctionsPCIeFunctionIdGet -
func (s *DefaultAPIService) RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdPCIeFunctionsPCIeFunctionIdGet(ctx context.Context, chassisId string, pCIeDeviceId string, pCIeFunctionId string) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdPCIeFunctionsPCIeFunctionIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PcieFunctionV151PcieFunction{}) or use other options such as http.Ok ...
	// return Response(200, PcieFunctionV151PcieFunction{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisChassisIdPCIeDevicesPCIeDeviceIdPCIeFunctionsPCIeFunctionIdGet method not implemented")
}

// RedfishV1ChassisGet -
func (s *DefaultAPIService) RedfishV1ChassisGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update RedfishV1ChassisGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ChassisCollectionChassisCollection{}) or use other options such as http.Ok ...
	// return Response(200, ChassisCollectionChassisCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1ChassisGet method not implemented")
}

// RedfishV1FabricsFabricIdConnectionsConnectionIdDelete -
func (s *DefaultAPIService) RedfishV1FabricsFabricIdConnectionsConnectionIdDelete(ctx context.Context, fabricId string, connectionId string) (ImplResponse, error) {
	// TODO - update RedfishV1FabricsFabricIdConnectionsConnectionIdDelete with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ConnectionV131Connection{}) or use other options such as http.Ok ...
	// return Response(200, ConnectionV131Connection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1FabricsFabricIdConnectionsConnectionIdDelete method not implemented")
}

// RedfishV1FabricsFabricIdConnectionsConnectionIdGet -
func (s *DefaultAPIService) RedfishV1FabricsFabricIdConnectionsConnectionIdGet(ctx context.Context, fabricId string, connectionId string) (ImplResponse, error) {
	// TODO - update RedfishV1FabricsFabricIdConnectionsConnectionIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ConnectionV131Connection{}) or use other options such as http.Ok ...
	// return Response(200, ConnectionV131Connection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1FabricsFabricIdConnectionsConnectionIdGet method not implemented")
}

// RedfishV1FabricsFabricIdConnectionsGet -
func (s *DefaultAPIService) RedfishV1FabricsFabricIdConnectionsGet(ctx context.Context, fabricId string) (ImplResponse, error) {
	// TODO - update RedfishV1FabricsFabricIdConnectionsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ConnectionCollectionConnectionCollection{}) or use other options such as http.Ok ...
	// return Response(200, ConnectionCollectionConnectionCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1FabricsFabricIdConnectionsGet method not implemented")
}

// RedfishV1FabricsFabricIdConnectionsPost -
func (s *DefaultAPIService) RedfishV1FabricsFabricIdConnectionsPost(ctx context.Context, fabricId string, connectionV131Connection ConnectionV131Connection) (ImplResponse, error) {
	// TODO - update RedfishV1FabricsFabricIdConnectionsPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, ConnectionV131Connection{}) or use other options such as http.Ok ...
	// return Response(201, ConnectionV131Connection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1FabricsFabricIdConnectionsPost method not implemented")
}

// RedfishV1FabricsFabricIdEndpointsEndpointIdGet -
func (s *DefaultAPIService) RedfishV1FabricsFabricIdEndpointsEndpointIdGet(ctx context.Context, fabricId string, endpointId string) (ImplResponse, error) {
	// TODO - update RedfishV1FabricsFabricIdEndpointsEndpointIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, EndpointV181Endpoint{}) or use other options such as http.Ok ...
	// return Response(200, EndpointV181Endpoint{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1FabricsFabricIdEndpointsEndpointIdGet method not implemented")
}

// RedfishV1FabricsFabricIdEndpointsGet -
func (s *DefaultAPIService) RedfishV1FabricsFabricIdEndpointsGet(ctx context.Context, fabricId string) (ImplResponse, error) {
	// TODO - update RedfishV1FabricsFabricIdEndpointsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, EndpointCollectionEndpointCollection{}) or use other options such as http.Ok ...
	// return Response(200, EndpointCollectionEndpointCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1FabricsFabricIdEndpointsGet method not implemented")
}

// RedfishV1FabricsFabricIdGet -
func (s *DefaultAPIService) RedfishV1FabricsFabricIdGet(ctx context.Context, fabricId string) (ImplResponse, error) {
	// TODO - update RedfishV1FabricsFabricIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, FabricV131Fabric{}) or use other options such as http.Ok ...
	// return Response(200, FabricV131Fabric{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1FabricsFabricIdGet method not implemented")
}

// RedfishV1FabricsFabricIdSwitchesGet -
func (s *DefaultAPIService) RedfishV1FabricsFabricIdSwitchesGet(ctx context.Context, fabricId string) (ImplResponse, error) {
	// TODO - update RedfishV1FabricsFabricIdSwitchesGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SwitchCollectionSwitchCollection{}) or use other options such as http.Ok ...
	// return Response(200, SwitchCollectionSwitchCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1FabricsFabricIdSwitchesGet method not implemented")
}

// RedfishV1FabricsFabricIdSwitchesSwitchIdGet -
func (s *DefaultAPIService) RedfishV1FabricsFabricIdSwitchesSwitchIdGet(ctx context.Context, fabricId string, switchId string) (ImplResponse, error) {
	// TODO - update RedfishV1FabricsFabricIdSwitchesSwitchIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SwitchV192Switch{}) or use other options such as http.Ok ...
	// return Response(200, SwitchV192Switch{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1FabricsFabricIdSwitchesSwitchIdGet method not implemented")
}

// RedfishV1FabricsFabricIdSwitchesSwitchIdPortsGet -
func (s *DefaultAPIService) RedfishV1FabricsFabricIdSwitchesSwitchIdPortsGet(ctx context.Context, fabricId string, switchId string) (ImplResponse, error) {
	// TODO - update RedfishV1FabricsFabricIdSwitchesSwitchIdPortsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PortCollectionPortCollection{}) or use other options such as http.Ok ...
	// return Response(200, PortCollectionPortCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1FabricsFabricIdSwitchesSwitchIdPortsGet method not implemented")
}

// RedfishV1FabricsFabricIdSwitchesSwitchIdPortsPortIdGet -
func (s *DefaultAPIService) RedfishV1FabricsFabricIdSwitchesSwitchIdPortsPortIdGet(ctx context.Context, fabricId string, switchId string, portId string) (ImplResponse, error) {
	// TODO - update RedfishV1FabricsFabricIdSwitchesSwitchIdPortsPortIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PortV1110Port{}) or use other options such as http.Ok ...
	// return Response(200, PortV1110Port{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1FabricsFabricIdSwitchesSwitchIdPortsPortIdGet method not implemented")
}

// RedfishV1FabricsGet -
func (s *DefaultAPIService) RedfishV1FabricsGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update RedfishV1FabricsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, FabricCollectionFabricCollection{}) or use other options such as http.Ok ...
	// return Response(200, FabricCollectionFabricCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1FabricsGet method not implemented")
}

// RedfishV1Get -
func (s *DefaultAPIService) RedfishV1Get(ctx context.Context) (ImplResponse, error) {
	// TODO - update RedfishV1Get with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ServiceRootV1161ServiceRoot{}) or use other options such as http.Ok ...
	// return Response(200, ServiceRootV1161ServiceRoot{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1Get method not implemented")
}

// RedfishV1MetadataGet -
func (s *DefaultAPIService) RedfishV1MetadataGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update RedfishV1MetadataGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1MetadataGet method not implemented")
}

// RedfishV1OdataGet -
func (s *DefaultAPIService) RedfishV1OdataGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update RedfishV1OdataGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, RedfishV1OdataGet200Response{}) or use other options such as http.Ok ...
	// return Response(200, RedfishV1OdataGet200Response{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1OdataGet method not implemented")
}

// RedfishV1SessionServiceGet -
func (s *DefaultAPIService) RedfishV1SessionServiceGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update RedfishV1SessionServiceGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SessionServiceV118SessionService{}) or use other options such as http.Ok ...
	// return Response(200, SessionServiceV118SessionService{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SessionServiceGet method not implemented")
}

// RedfishV1SessionServicePatch -
func (s *DefaultAPIService) RedfishV1SessionServicePatch(ctx context.Context, sessionServiceV118SessionService SessionServiceV118SessionService) (ImplResponse, error) {
	// TODO - update RedfishV1SessionServicePatch with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SessionServiceV118SessionService{}) or use other options such as http.Ok ...
	// return Response(200, SessionServiceV118SessionService{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SessionServicePatch method not implemented")
}

// RedfishV1SessionServicePut -
func (s *DefaultAPIService) RedfishV1SessionServicePut(ctx context.Context, sessionServiceV118SessionService SessionServiceV118SessionService) (ImplResponse, error) {
	// TODO - update RedfishV1SessionServicePut with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SessionServiceV118SessionService{}) or use other options such as http.Ok ...
	// return Response(200, SessionServiceV118SessionService{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SessionServicePut method not implemented")
}

// RedfishV1SessionServiceSessionsGet -
func (s *DefaultAPIService) RedfishV1SessionServiceSessionsGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update RedfishV1SessionServiceSessionsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SessionCollectionSessionCollection{}) or use other options such as http.Ok ...
	// return Response(200, SessionCollectionSessionCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SessionServiceSessionsGet method not implemented")
}

// RedfishV1SessionServiceSessionsPost -
func (s *DefaultAPIService) RedfishV1SessionServiceSessionsPost(ctx context.Context, sessionV171Session SessionV171Session) (ImplResponse, error) {
	// TODO - update RedfishV1SessionServiceSessionsPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, SessionV171Session{}) or use other options such as http.Ok ...
	// return Response(201, SessionV171Session{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SessionServiceSessionsPost method not implemented")
}

// RedfishV1SessionServiceSessionsSessionIdDelete -
func (s *DefaultAPIService) RedfishV1SessionServiceSessionsSessionIdDelete(ctx context.Context, sessionId string) (ImplResponse, error) {
	// TODO - update RedfishV1SessionServiceSessionsSessionIdDelete with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SessionV171Session{}) or use other options such as http.Ok ...
	// return Response(200, SessionV171Session{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SessionServiceSessionsSessionIdDelete method not implemented")
}

// RedfishV1SessionServiceSessionsSessionIdGet -
func (s *DefaultAPIService) RedfishV1SessionServiceSessionsSessionIdGet(ctx context.Context, sessionId string) (ImplResponse, error) {
	// TODO - update RedfishV1SessionServiceSessionsSessionIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SessionV171Session{}) or use other options such as http.Ok ...
	// return Response(200, SessionV171Session{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SessionServiceSessionsSessionIdGet method not implemented")
}

// RedfishV1SystemsComputerSystemIdActionsComputerSystemResetPost -
func (s *DefaultAPIService) RedfishV1SystemsComputerSystemIdActionsComputerSystemResetPost(ctx context.Context, computerSystemId string, computerSystemV1220ResetRequestBody ComputerSystemV1220ResetRequestBody) (ImplResponse, error) {
	// TODO - update RedfishV1SystemsComputerSystemIdActionsComputerSystemResetPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, RedfishError{}) or use other options such as http.Ok ...
	// return Response(200, RedfishError{}), nil

	// TODO: Uncomment the next line to return response Response(201, RedfishError{}) or use other options such as http.Ok ...
	// return Response(201, RedfishError{}), nil

	// TODO: Uncomment the next line to return response Response(202, TaskV173Task{}) or use other options such as http.Ok ...
	// return Response(202, TaskV173Task{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SystemsComputerSystemIdActionsComputerSystemResetPost method not implemented")
}

// RedfishV1SystemsComputerSystemIdGet -
func (s *DefaultAPIService) RedfishV1SystemsComputerSystemIdGet(ctx context.Context, computerSystemId string) (ImplResponse, error) {
	// TODO - update RedfishV1SystemsComputerSystemIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ComputerSystemV1220ComputerSystem{}) or use other options such as http.Ok ...
	// return Response(200, ComputerSystemV1220ComputerSystem{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SystemsComputerSystemIdGet method not implemented")
}

// RedfishV1SystemsComputerSystemIdMemoryDomainsGet -
func (s *DefaultAPIService) RedfishV1SystemsComputerSystemIdMemoryDomainsGet(ctx context.Context, computerSystemId string) (ImplResponse, error) {
	// TODO - update RedfishV1SystemsComputerSystemIdMemoryDomainsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, MemoryDomainCollectionMemoryDomainCollection{}) or use other options such as http.Ok ...
	// return Response(200, MemoryDomainCollectionMemoryDomainCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SystemsComputerSystemIdMemoryDomainsGet method not implemented")
}

// RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdGet -
func (s *DefaultAPIService) RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdGet(ctx context.Context, computerSystemId string, memoryDomainId string) (ImplResponse, error) {
	// TODO - update RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, MemoryDomainV150MemoryDomain{}) or use other options such as http.Ok ...
	// return Response(200, MemoryDomainV150MemoryDomain{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdGet method not implemented")
}

// RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksGet -
func (s *DefaultAPIService) RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksGet(ctx context.Context, computerSystemId string, memoryDomainId string) (ImplResponse, error) {
	// TODO - update RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, MemoryChunksCollectionMemoryChunksCollection{}) or use other options such as http.Ok ...
	// return Response(200, MemoryChunksCollectionMemoryChunksCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksGet method not implemented")
}

// RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksMemoryChunksIdDelete -
func (s *DefaultAPIService) RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksMemoryChunksIdDelete(ctx context.Context, computerSystemId string, memoryDomainId string, memoryChunksId string) (ImplResponse, error) {
	// TODO - update RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksMemoryChunksIdDelete with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, MemoryChunksV161MemoryChunks{}) or use other options such as http.Ok ...
	// return Response(200, MemoryChunksV161MemoryChunks{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksMemoryChunksIdDelete method not implemented")
}

// RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksMemoryChunksIdGet -
func (s *DefaultAPIService) RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksMemoryChunksIdGet(ctx context.Context, computerSystemId string, memoryDomainId string, memoryChunksId string) (ImplResponse, error) {
	// TODO - update RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksMemoryChunksIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, MemoryChunksV161MemoryChunks{}) or use other options such as http.Ok ...
	// return Response(200, MemoryChunksV161MemoryChunks{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksMemoryChunksIdGet method not implemented")
}

// RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksPost -
func (s *DefaultAPIService) RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksPost(ctx context.Context, computerSystemId string, memoryDomainId string, memoryChunksV161MemoryChunks MemoryChunksV161MemoryChunks) (ImplResponse, error) {
	// TODO - update RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, MemoryChunksV161MemoryChunks{}) or use other options such as http.Ok ...
	// return Response(201, MemoryChunksV161MemoryChunks{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SystemsComputerSystemIdMemoryDomainsMemoryDomainIdMemoryChunksPost method not implemented")
}

// RedfishV1SystemsComputerSystemIdMemoryGet -
func (s *DefaultAPIService) RedfishV1SystemsComputerSystemIdMemoryGet(ctx context.Context, computerSystemId string) (ImplResponse, error) {
	// TODO - update RedfishV1SystemsComputerSystemIdMemoryGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, MemoryCollectionMemoryCollection{}) or use other options such as http.Ok ...
	// return Response(200, MemoryCollectionMemoryCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SystemsComputerSystemIdMemoryGet method not implemented")
}

// RedfishV1SystemsComputerSystemIdMemoryMemoryIdGet -
func (s *DefaultAPIService) RedfishV1SystemsComputerSystemIdMemoryMemoryIdGet(ctx context.Context, computerSystemId string, memoryId string) (ImplResponse, error) {
	// TODO - update RedfishV1SystemsComputerSystemIdMemoryMemoryIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, MemoryV1190Memory{}) or use other options such as http.Ok ...
	// return Response(200, MemoryV1190Memory{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SystemsComputerSystemIdMemoryMemoryIdGet method not implemented")
}

// RedfishV1SystemsGet -
func (s *DefaultAPIService) RedfishV1SystemsGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update RedfishV1SystemsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ComputerSystemCollectionComputerSystemCollection{}) or use other options such as http.Ok ...
	// return Response(200, ComputerSystemCollectionComputerSystemCollection{}), nil

	// TODO: Uncomment the next line to return response Response(0, RedfishError{}) or use other options such as http.Ok ...
	// return Response(0, RedfishError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RedfishV1SystemsGet method not implemented")
}
