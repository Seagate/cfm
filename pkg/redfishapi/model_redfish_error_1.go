/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package redfishapi

// RedfishError1 - The error payload from a Redfish service.
type RedfishError1 struct {
	Error RedfishErrorError `json:"error"`
}

// AssertRedfishError1Required checks if the required fields are not zero-ed
func AssertRedfishError1Required(obj RedfishError1) error {
	elements := map[string]interface{}{
		"error": obj.Error,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertRedfishErrorErrorRequired(obj.Error); err != nil {
		return err
	}
	return nil
}

// AssertRedfishError1Constraints checks if the values respects the defined constraints
func AssertRedfishError1Constraints(obj RedfishError1) error {
	return nil
}
