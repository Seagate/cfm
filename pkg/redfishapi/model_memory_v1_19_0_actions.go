/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package redfishapi

// MemoryV1190Actions - The available actions for this resource.
type MemoryV1190Actions struct {
	MemoryDisableMasterPassphrase MemoryV1190DisableMasterPassphrase `json:"#Memory.DisableMasterPassphrase,omitempty"`

	MemoryDisablePassphrase MemoryV1190DisablePassphrase `json:"#Memory.DisablePassphrase,omitempty"`

	MemoryFreezeSecurityState MemoryV1190FreezeSecurityState `json:"#Memory.FreezeSecurityState,omitempty"`

	MemoryInjectPersistentPoison MemoryV1190InjectPersistentPoison `json:"#Memory.InjectPersistentPoison,omitempty"`

	MemoryOverwriteUnit MemoryV1190OverwriteUnit `json:"#Memory.OverwriteUnit,omitempty"`

	MemoryReset MemoryV1190Reset `json:"#Memory.Reset,omitempty"`

	MemoryResetToDefaults MemoryV1190ResetToDefaults `json:"#Memory.ResetToDefaults,omitempty"`

	MemoryScanMedia MemoryV1190ScanMedia `json:"#Memory.ScanMedia,omitempty"`

	MemorySecureEraseUnit MemoryV1190SecureEraseUnit `json:"#Memory.SecureEraseUnit,omitempty"`

	MemorySetMasterPassphrase MemoryV1190SetMasterPassphrase `json:"#Memory.SetMasterPassphrase,omitempty"`

	MemorySetPassphrase MemoryV1190SetPassphrase `json:"#Memory.SetPassphrase,omitempty"`

	MemoryUnlockUnit MemoryV1190UnlockUnit `json:"#Memory.UnlockUnit,omitempty"`

	// The available OEM-specific actions for this resource.
	Oem map[string]interface{} `json:"Oem,omitempty"`
}

// AssertMemoryV1190ActionsRequired checks if the required fields are not zero-ed
func AssertMemoryV1190ActionsRequired(obj MemoryV1190Actions) error {
	if err := AssertMemoryV1190DisableMasterPassphraseRequired(obj.MemoryDisableMasterPassphrase); err != nil {
		return err
	}
	if err := AssertMemoryV1190DisablePassphraseRequired(obj.MemoryDisablePassphrase); err != nil {
		return err
	}
	if err := AssertMemoryV1190FreezeSecurityStateRequired(obj.MemoryFreezeSecurityState); err != nil {
		return err
	}
	if err := AssertMemoryV1190InjectPersistentPoisonRequired(obj.MemoryInjectPersistentPoison); err != nil {
		return err
	}
	if err := AssertMemoryV1190OverwriteUnitRequired(obj.MemoryOverwriteUnit); err != nil {
		return err
	}
	if err := AssertMemoryV1190ResetRequired(obj.MemoryReset); err != nil {
		return err
	}
	if err := AssertMemoryV1190ResetToDefaultsRequired(obj.MemoryResetToDefaults); err != nil {
		return err
	}
	if err := AssertMemoryV1190ScanMediaRequired(obj.MemoryScanMedia); err != nil {
		return err
	}
	if err := AssertMemoryV1190SecureEraseUnitRequired(obj.MemorySecureEraseUnit); err != nil {
		return err
	}
	if err := AssertMemoryV1190SetMasterPassphraseRequired(obj.MemorySetMasterPassphrase); err != nil {
		return err
	}
	if err := AssertMemoryV1190SetPassphraseRequired(obj.MemorySetPassphrase); err != nil {
		return err
	}
	if err := AssertMemoryV1190UnlockUnitRequired(obj.MemoryUnlockUnit); err != nil {
		return err
	}
	return nil
}

// AssertMemoryV1190ActionsConstraints checks if the values respects the defined constraints
func AssertMemoryV1190ActionsConstraints(obj MemoryV1190Actions) error {
	return nil
}
