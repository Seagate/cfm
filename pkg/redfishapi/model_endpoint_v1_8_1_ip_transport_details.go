/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package redfishapi

import (
	"errors"
)

// EndpointV181IpTransportDetails - This type specifies the details of the transport supported by the endpoint.  The properties that are present are dependent on the type of transport supported by the endpoint.
type EndpointV181IpTransportDetails struct {
	IPv4Address IpAddressesIpv4Address `json:"IPv4Address,omitempty"`

	IPv6Address IpAddressesIpv6Address `json:"IPv6Address,omitempty"`

	// The UDP or TCP port number used by the endpoint.
	Port int64 `json:"Port,omitempty"`

	TransportProtocol ProtocolProtocol `json:"TransportProtocol,omitempty"`
}

// AssertEndpointV181IpTransportDetailsRequired checks if the required fields are not zero-ed
func AssertEndpointV181IpTransportDetailsRequired(obj EndpointV181IpTransportDetails) error {
	if err := AssertIpAddressesIpv4AddressRequired(obj.IPv4Address); err != nil {
		return err
	}
	if err := AssertIpAddressesIpv6AddressRequired(obj.IPv6Address); err != nil {
		return err
	}
	return nil
}

// AssertEndpointV181IpTransportDetailsConstraints checks if the values respects the defined constraints
func AssertEndpointV181IpTransportDetailsConstraints(obj EndpointV181IpTransportDetails) error {
	if obj.Port < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.Port > 65535 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
