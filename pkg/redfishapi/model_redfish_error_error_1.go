/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package redfishapi

// RedfishErrorError1 - The properties that describe an error from a Redfish service.
type RedfishErrorError1 struct {

	// An array of messages describing one or more error messages.
	MessageExtendedInfo []MessageV120Message1 `json:"@Message.ExtendedInfo,omitempty"`

	// A string indicating a specific MessageId from a message registry.
	Code string `json:"code"`

	// A human-readable error message corresponding to the message in a message registry.
	Message string `json:"message"`
}

// AssertRedfishErrorError1Required checks if the required fields are not zero-ed
func AssertRedfishErrorError1Required(obj RedfishErrorError1) error {
	elements := map[string]interface{}{
		"code":    obj.Code,
		"message": obj.Message,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.MessageExtendedInfo {
		if err := AssertMessageV120Message1Required(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRedfishErrorError1Constraints checks if the values respects the defined constraints
func AssertRedfishErrorError1Constraints(obj RedfishErrorError1) error {
	return nil
}
