/*
 * Redfish
 *
 * This contains the definition of a Redfish service.
 *
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package redfishapi

import (
	"errors"
)

// PortV1110FunctionMinBandwidth - A minimum bandwidth allocation percentage for a network device functions associated with a port.
type PortV1110FunctionMinBandwidth struct {

	// The minimum bandwidth allocation percentage allocated to the corresponding network device function instance.
	AllocationPercent *int64 `json:"AllocationPercent,omitempty"`

	NetworkDeviceFunction OdataV4IdRef `json:"NetworkDeviceFunction,omitempty"`
}

// AssertPortV1110FunctionMinBandwidthRequired checks if the required fields are not zero-ed
func AssertPortV1110FunctionMinBandwidthRequired(obj PortV1110FunctionMinBandwidth) error {
	if err := AssertOdataV4IdRefRequired(obj.NetworkDeviceFunction); err != nil {
		return err
	}
	return nil
}

// AssertPortV1110FunctionMinBandwidthConstraints checks if the values respects the defined constraints
func AssertPortV1110FunctionMinBandwidthConstraints(obj PortV1110FunctionMinBandwidth) error {
	if obj.AllocationPercent != nil && *obj.AllocationPercent < 0 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	if obj.AllocationPercent != nil && *obj.AllocationPercent > 100 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
