/*
Composable Fabric Manager Service OpenAPI

This API allows users to interact through the CFM Service with CXL Hosts and Memory Appliances. The main purpose of this interface is to allow the retrieval of information and the creation and mapping of memory from a Memory Appliance to a CXL host.

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the MemoryResourceBlock type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemoryResourceBlock{}

// MemoryResourceBlock struct for MemoryResourceBlock
type MemoryResourceBlock struct {
	// The id of this resource
	Id                string                               `json:"id"`
	CompositionStatus MemoryResourceBlockCompositionStatus `json:"compositionStatus"`
	// The number of compositions in which this resource block is currently participating
	CapacityMiB *int32 `json:"capacityMiB,omitempty"`
	// The number of compositions in which this resource block is currently participating
	DataWidthBits *int32 `json:"dataWidthBits,omitempty"`
	// The type of memory device
	MemoryType *string `json:"memoryType,omitempty"`
	// Type details of the memory device
	MemoryDeviceType *string `json:"memoryDeviceType,omitempty"`
	// The memory device manufacturer
	Manufacturer *string `json:"manufacturer,omitempty"`
	// Operating speed of the memory device in MHz
	OperatingSpeedMhz *int32 `json:"operatingSpeedMhz,omitempty"`
	// The product part number of this device
	PartNumber *string `json:"partNumber,omitempty"`
	// The product serial number of this device
	SerialNumber *string `json:"serialNumber,omitempty"`
	// Number of ranks available in the memory device
	RankCount *int32 `json:"rankCount,omitempty"`
	// Id of the channel(dimm) associated with this resource
	ChannelId int32 `json:"channelId"`
	// Position index for this resource within the designated channel(dimm)
	ChannelResourceIndex int32 `json:"channelResourceIndex"`
}

// NewMemoryResourceBlock instantiates a new MemoryResourceBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemoryResourceBlock(id string, compositionStatus MemoryResourceBlockCompositionStatus, channelId int32, channelResourceIndex int32) *MemoryResourceBlock {
	this := MemoryResourceBlock{}
	this.Id = id
	this.CompositionStatus = compositionStatus
	this.ChannelId = channelId
	this.ChannelResourceIndex = channelResourceIndex
	return &this
}

// NewMemoryResourceBlockWithDefaults instantiates a new MemoryResourceBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemoryResourceBlockWithDefaults() *MemoryResourceBlock {
	this := MemoryResourceBlock{}
	return &this
}

// GetId returns the Id field value
func (o *MemoryResourceBlock) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MemoryResourceBlock) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MemoryResourceBlock) SetId(v string) {
	o.Id = v
}

// GetCompositionStatus returns the CompositionStatus field value
func (o *MemoryResourceBlock) GetCompositionStatus() MemoryResourceBlockCompositionStatus {
	if o == nil {
		var ret MemoryResourceBlockCompositionStatus
		return ret
	}

	return o.CompositionStatus
}

// GetCompositionStatusOk returns a tuple with the CompositionStatus field value
// and a boolean to check if the value has been set.
func (o *MemoryResourceBlock) GetCompositionStatusOk() (*MemoryResourceBlockCompositionStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompositionStatus, true
}

// SetCompositionStatus sets field value
func (o *MemoryResourceBlock) SetCompositionStatus(v MemoryResourceBlockCompositionStatus) {
	o.CompositionStatus = v
}

// GetCapacityMiB returns the CapacityMiB field value if set, zero value otherwise.
func (o *MemoryResourceBlock) GetCapacityMiB() int32 {
	if o == nil || IsNil(o.CapacityMiB) {
		var ret int32
		return ret
	}
	return *o.CapacityMiB
}

// GetCapacityMiBOk returns a tuple with the CapacityMiB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryResourceBlock) GetCapacityMiBOk() (*int32, bool) {
	if o == nil || IsNil(o.CapacityMiB) {
		return nil, false
	}
	return o.CapacityMiB, true
}

// HasCapacityMiB returns a boolean if a field has been set.
func (o *MemoryResourceBlock) HasCapacityMiB() bool {
	if o != nil && !IsNil(o.CapacityMiB) {
		return true
	}

	return false
}

// SetCapacityMiB gets a reference to the given int32 and assigns it to the CapacityMiB field.
func (o *MemoryResourceBlock) SetCapacityMiB(v int32) {
	o.CapacityMiB = &v
}

// GetDataWidthBits returns the DataWidthBits field value if set, zero value otherwise.
func (o *MemoryResourceBlock) GetDataWidthBits() int32 {
	if o == nil || IsNil(o.DataWidthBits) {
		var ret int32
		return ret
	}
	return *o.DataWidthBits
}

// GetDataWidthBitsOk returns a tuple with the DataWidthBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryResourceBlock) GetDataWidthBitsOk() (*int32, bool) {
	if o == nil || IsNil(o.DataWidthBits) {
		return nil, false
	}
	return o.DataWidthBits, true
}

// HasDataWidthBits returns a boolean if a field has been set.
func (o *MemoryResourceBlock) HasDataWidthBits() bool {
	if o != nil && !IsNil(o.DataWidthBits) {
		return true
	}

	return false
}

// SetDataWidthBits gets a reference to the given int32 and assigns it to the DataWidthBits field.
func (o *MemoryResourceBlock) SetDataWidthBits(v int32) {
	o.DataWidthBits = &v
}

// GetMemoryType returns the MemoryType field value if set, zero value otherwise.
func (o *MemoryResourceBlock) GetMemoryType() string {
	if o == nil || IsNil(o.MemoryType) {
		var ret string
		return ret
	}
	return *o.MemoryType
}

// GetMemoryTypeOk returns a tuple with the MemoryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryResourceBlock) GetMemoryTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MemoryType) {
		return nil, false
	}
	return o.MemoryType, true
}

// HasMemoryType returns a boolean if a field has been set.
func (o *MemoryResourceBlock) HasMemoryType() bool {
	if o != nil && !IsNil(o.MemoryType) {
		return true
	}

	return false
}

// SetMemoryType gets a reference to the given string and assigns it to the MemoryType field.
func (o *MemoryResourceBlock) SetMemoryType(v string) {
	o.MemoryType = &v
}

// GetMemoryDeviceType returns the MemoryDeviceType field value if set, zero value otherwise.
func (o *MemoryResourceBlock) GetMemoryDeviceType() string {
	if o == nil || IsNil(o.MemoryDeviceType) {
		var ret string
		return ret
	}
	return *o.MemoryDeviceType
}

// GetMemoryDeviceTypeOk returns a tuple with the MemoryDeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryResourceBlock) GetMemoryDeviceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MemoryDeviceType) {
		return nil, false
	}
	return o.MemoryDeviceType, true
}

// HasMemoryDeviceType returns a boolean if a field has been set.
func (o *MemoryResourceBlock) HasMemoryDeviceType() bool {
	if o != nil && !IsNil(o.MemoryDeviceType) {
		return true
	}

	return false
}

// SetMemoryDeviceType gets a reference to the given string and assigns it to the MemoryDeviceType field.
func (o *MemoryResourceBlock) SetMemoryDeviceType(v string) {
	o.MemoryDeviceType = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *MemoryResourceBlock) GetManufacturer() string {
	if o == nil || IsNil(o.Manufacturer) {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryResourceBlock) GetManufacturerOk() (*string, bool) {
	if o == nil || IsNil(o.Manufacturer) {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *MemoryResourceBlock) HasManufacturer() bool {
	if o != nil && !IsNil(o.Manufacturer) {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *MemoryResourceBlock) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetOperatingSpeedMhz returns the OperatingSpeedMhz field value if set, zero value otherwise.
func (o *MemoryResourceBlock) GetOperatingSpeedMhz() int32 {
	if o == nil || IsNil(o.OperatingSpeedMhz) {
		var ret int32
		return ret
	}
	return *o.OperatingSpeedMhz
}

// GetOperatingSpeedMhzOk returns a tuple with the OperatingSpeedMhz field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryResourceBlock) GetOperatingSpeedMhzOk() (*int32, bool) {
	if o == nil || IsNil(o.OperatingSpeedMhz) {
		return nil, false
	}
	return o.OperatingSpeedMhz, true
}

// HasOperatingSpeedMhz returns a boolean if a field has been set.
func (o *MemoryResourceBlock) HasOperatingSpeedMhz() bool {
	if o != nil && !IsNil(o.OperatingSpeedMhz) {
		return true
	}

	return false
}

// SetOperatingSpeedMhz gets a reference to the given int32 and assigns it to the OperatingSpeedMhz field.
func (o *MemoryResourceBlock) SetOperatingSpeedMhz(v int32) {
	o.OperatingSpeedMhz = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *MemoryResourceBlock) GetPartNumber() string {
	if o == nil || IsNil(o.PartNumber) {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryResourceBlock) GetPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PartNumber) {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *MemoryResourceBlock) HasPartNumber() bool {
	if o != nil && !IsNil(o.PartNumber) {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *MemoryResourceBlock) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *MemoryResourceBlock) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryResourceBlock) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *MemoryResourceBlock) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *MemoryResourceBlock) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetRankCount returns the RankCount field value if set, zero value otherwise.
func (o *MemoryResourceBlock) GetRankCount() int32 {
	if o == nil || IsNil(o.RankCount) {
		var ret int32
		return ret
	}
	return *o.RankCount
}

// GetRankCountOk returns a tuple with the RankCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryResourceBlock) GetRankCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RankCount) {
		return nil, false
	}
	return o.RankCount, true
}

// HasRankCount returns a boolean if a field has been set.
func (o *MemoryResourceBlock) HasRankCount() bool {
	if o != nil && !IsNil(o.RankCount) {
		return true
	}

	return false
}

// SetRankCount gets a reference to the given int32 and assigns it to the RankCount field.
func (o *MemoryResourceBlock) SetRankCount(v int32) {
	o.RankCount = &v
}

// GetChannelId returns the ChannelId field value
func (o *MemoryResourceBlock) GetChannelId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value
// and a boolean to check if the value has been set.
func (o *MemoryResourceBlock) GetChannelIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelId, true
}

// SetChannelId sets field value
func (o *MemoryResourceBlock) SetChannelId(v int32) {
	o.ChannelId = v
}

// GetChannelResourceIndex returns the ChannelResourceIndex field value
func (o *MemoryResourceBlock) GetChannelResourceIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ChannelResourceIndex
}

// GetChannelResourceIndexOk returns a tuple with the ChannelResourceIndex field value
// and a boolean to check if the value has been set.
func (o *MemoryResourceBlock) GetChannelResourceIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelResourceIndex, true
}

// SetChannelResourceIndex sets field value
func (o *MemoryResourceBlock) SetChannelResourceIndex(v int32) {
	o.ChannelResourceIndex = v
}

func (o MemoryResourceBlock) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemoryResourceBlock) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["compositionStatus"] = o.CompositionStatus
	if !IsNil(o.CapacityMiB) {
		toSerialize["capacityMiB"] = o.CapacityMiB
	}
	if !IsNil(o.DataWidthBits) {
		toSerialize["dataWidthBits"] = o.DataWidthBits
	}
	if !IsNil(o.MemoryType) {
		toSerialize["memoryType"] = o.MemoryType
	}
	if !IsNil(o.MemoryDeviceType) {
		toSerialize["memoryDeviceType"] = o.MemoryDeviceType
	}
	if !IsNil(o.Manufacturer) {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if !IsNil(o.OperatingSpeedMhz) {
		toSerialize["operatingSpeedMhz"] = o.OperatingSpeedMhz
	}
	if !IsNil(o.PartNumber) {
		toSerialize["partNumber"] = o.PartNumber
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if !IsNil(o.RankCount) {
		toSerialize["rankCount"] = o.RankCount
	}
	toSerialize["channelId"] = o.ChannelId
	toSerialize["channelResourceIndex"] = o.ChannelResourceIndex
	return toSerialize, nil
}

type NullableMemoryResourceBlock struct {
	value *MemoryResourceBlock
	isSet bool
}

func (v NullableMemoryResourceBlock) Get() *MemoryResourceBlock {
	return v.value
}

func (v *NullableMemoryResourceBlock) Set(val *MemoryResourceBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableMemoryResourceBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableMemoryResourceBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemoryResourceBlock(val *MemoryResourceBlock) *NullableMemoryResourceBlock {
	return &NullableMemoryResourceBlock{value: val, isSet: true}
}

func (v NullableMemoryResourceBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemoryResourceBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
