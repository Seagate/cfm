/*
Composable Fabric Manager Service OpenAPI

This API allows users to interact through the CFM Service with CXL Hosts and Memory Appliances. The main purpose of this interface is to allow the retrieval of information and the creation and mapping of memory from a Memory Appliance to a CXL host.

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the MemoryDeviceInformationLinkStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemoryDeviceInformationLinkStatus{}

// MemoryDeviceInformationLinkStatus The speed and width about the link
type MemoryDeviceInformationLinkStatus struct {
	// The current speed of this link
	CurrentSpeedGTps *int32 `json:"currentSpeedGTps,omitempty"`
	// The max speed of this link
	MaxSpeedGTps *int32 `json:"maxSpeedGTps,omitempty"`
	// The current width of this link
	CurrentWidth *int32 `json:"currentWidth,omitempty"`
	// The max width of this link
	MaxWidth *int32 `json:"maxWidth,omitempty"`
}

// NewMemoryDeviceInformationLinkStatus instantiates a new MemoryDeviceInformationLinkStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemoryDeviceInformationLinkStatus() *MemoryDeviceInformationLinkStatus {
	this := MemoryDeviceInformationLinkStatus{}
	return &this
}

// NewMemoryDeviceInformationLinkStatusWithDefaults instantiates a new MemoryDeviceInformationLinkStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemoryDeviceInformationLinkStatusWithDefaults() *MemoryDeviceInformationLinkStatus {
	this := MemoryDeviceInformationLinkStatus{}
	return &this
}

// GetCurrentSpeedGTps returns the CurrentSpeedGTps field value if set, zero value otherwise.
func (o *MemoryDeviceInformationLinkStatus) GetCurrentSpeedGTps() int32 {
	if o == nil || IsNil(o.CurrentSpeedGTps) {
		var ret int32
		return ret
	}
	return *o.CurrentSpeedGTps
}

// GetCurrentSpeedGTpsOk returns a tuple with the CurrentSpeedGTps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryDeviceInformationLinkStatus) GetCurrentSpeedGTpsOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentSpeedGTps) {
		return nil, false
	}
	return o.CurrentSpeedGTps, true
}

// HasCurrentSpeedGTps returns a boolean if a field has been set.
func (o *MemoryDeviceInformationLinkStatus) HasCurrentSpeedGTps() bool {
	if o != nil && !IsNil(o.CurrentSpeedGTps) {
		return true
	}

	return false
}

// SetCurrentSpeedGTps gets a reference to the given int32 and assigns it to the CurrentSpeedGTps field.
func (o *MemoryDeviceInformationLinkStatus) SetCurrentSpeedGTps(v int32) {
	o.CurrentSpeedGTps = &v
}

// GetMaxSpeedGTps returns the MaxSpeedGTps field value if set, zero value otherwise.
func (o *MemoryDeviceInformationLinkStatus) GetMaxSpeedGTps() int32 {
	if o == nil || IsNil(o.MaxSpeedGTps) {
		var ret int32
		return ret
	}
	return *o.MaxSpeedGTps
}

// GetMaxSpeedGTpsOk returns a tuple with the MaxSpeedGTps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryDeviceInformationLinkStatus) GetMaxSpeedGTpsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSpeedGTps) {
		return nil, false
	}
	return o.MaxSpeedGTps, true
}

// HasMaxSpeedGTps returns a boolean if a field has been set.
func (o *MemoryDeviceInformationLinkStatus) HasMaxSpeedGTps() bool {
	if o != nil && !IsNil(o.MaxSpeedGTps) {
		return true
	}

	return false
}

// SetMaxSpeedGTps gets a reference to the given int32 and assigns it to the MaxSpeedGTps field.
func (o *MemoryDeviceInformationLinkStatus) SetMaxSpeedGTps(v int32) {
	o.MaxSpeedGTps = &v
}

// GetCurrentWidth returns the CurrentWidth field value if set, zero value otherwise.
func (o *MemoryDeviceInformationLinkStatus) GetCurrentWidth() int32 {
	if o == nil || IsNil(o.CurrentWidth) {
		var ret int32
		return ret
	}
	return *o.CurrentWidth
}

// GetCurrentWidthOk returns a tuple with the CurrentWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryDeviceInformationLinkStatus) GetCurrentWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentWidth) {
		return nil, false
	}
	return o.CurrentWidth, true
}

// HasCurrentWidth returns a boolean if a field has been set.
func (o *MemoryDeviceInformationLinkStatus) HasCurrentWidth() bool {
	if o != nil && !IsNil(o.CurrentWidth) {
		return true
	}

	return false
}

// SetCurrentWidth gets a reference to the given int32 and assigns it to the CurrentWidth field.
func (o *MemoryDeviceInformationLinkStatus) SetCurrentWidth(v int32) {
	o.CurrentWidth = &v
}

// GetMaxWidth returns the MaxWidth field value if set, zero value otherwise.
func (o *MemoryDeviceInformationLinkStatus) GetMaxWidth() int32 {
	if o == nil || IsNil(o.MaxWidth) {
		var ret int32
		return ret
	}
	return *o.MaxWidth
}

// GetMaxWidthOk returns a tuple with the MaxWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryDeviceInformationLinkStatus) GetMaxWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxWidth) {
		return nil, false
	}
	return o.MaxWidth, true
}

// HasMaxWidth returns a boolean if a field has been set.
func (o *MemoryDeviceInformationLinkStatus) HasMaxWidth() bool {
	if o != nil && !IsNil(o.MaxWidth) {
		return true
	}

	return false
}

// SetMaxWidth gets a reference to the given int32 and assigns it to the MaxWidth field.
func (o *MemoryDeviceInformationLinkStatus) SetMaxWidth(v int32) {
	o.MaxWidth = &v
}

func (o MemoryDeviceInformationLinkStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemoryDeviceInformationLinkStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentSpeedGTps) {
		toSerialize["currentSpeedGTps"] = o.CurrentSpeedGTps
	}
	if !IsNil(o.MaxSpeedGTps) {
		toSerialize["maxSpeedGTps"] = o.MaxSpeedGTps
	}
	if !IsNil(o.CurrentWidth) {
		toSerialize["currentWidth"] = o.CurrentWidth
	}
	if !IsNil(o.MaxWidth) {
		toSerialize["maxWidth"] = o.MaxWidth
	}
	return toSerialize, nil
}

type NullableMemoryDeviceInformationLinkStatus struct {
	value *MemoryDeviceInformationLinkStatus
	isSet bool
}

func (v NullableMemoryDeviceInformationLinkStatus) Get() *MemoryDeviceInformationLinkStatus {
	return v.value
}

func (v *NullableMemoryDeviceInformationLinkStatus) Set(val *MemoryDeviceInformationLinkStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMemoryDeviceInformationLinkStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMemoryDeviceInformationLinkStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemoryDeviceInformationLinkStatus(val *MemoryDeviceInformationLinkStatus) *NullableMemoryDeviceInformationLinkStatus {
	return &NullableMemoryDeviceInformationLinkStatus{value: val, isSet: true}
}

func (v NullableMemoryDeviceInformationLinkStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemoryDeviceInformationLinkStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
