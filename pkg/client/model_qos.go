/*
Composable Fabric Manager Service OpenAPI

This API allows users to interact through the CFM Service with CXL Hosts and Memory Appliances. The main purpose of this interface is to allow the retrieval of information and the creation and mapping of memory from a Memory Appliance to a CXL host.

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// Qos the model 'Qos'
type Qos int32

// List of qos
const (
	_1 Qos = 1
	_2 Qos = 2
	_4 Qos = 4
	_8 Qos = 8
)

// All allowed values of Qos enum
var AllowedQosEnumValues = []Qos{
	1,
	2,
	4,
	8,
}

func (v *Qos) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Qos(value)
	for _, existing := range AllowedQosEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Qos", value)
}

// NewQosFromValue returns a pointer to a valid Qos
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewQosFromValue(v int32) (*Qos, error) {
	ev := Qos(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Qos: valid values are %v", v, AllowedQosEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Qos) IsValid() bool {
	for _, existing := range AllowedQosEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to qos value
func (v Qos) Ptr() *Qos {
	return &v
}

type NullableQos struct {
	value *Qos
	isSet bool
}

func (v NullableQos) Get() *Qos {
	return v.value
}

func (v *NullableQos) Set(val *Qos) {
	v.value = val
	v.isSet = true
}

func (v NullableQos) IsSet() bool {
	return v.isSet
}

func (v *NullableQos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQos(val *Qos) *NullableQos {
	return &NullableQos{value: val, isSet: true}
}

func (v NullableQos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
