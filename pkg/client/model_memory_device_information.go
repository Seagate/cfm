/*
Composable Fabric Manager Service OpenAPI

This API allows users to interact through the CFM Service with CXL Hosts and Memory Appliances. The main purpose of this interface is to allow the retrieval of information and the creation and mapping of memory from a Memory Appliance to a CXL host.

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the MemoryDeviceInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemoryDeviceInformation{}

// MemoryDeviceInformation struct for MemoryDeviceInformation
type MemoryDeviceInformation struct {
	// The id of this resource
	Id string `json:"id"`
	// The type of the device
	DeviceType *string `json:"deviceType,omitempty"`
	// A mebibyte equals 2**20 or 1,048,576 bytes.
	MemorySizeMiB *int32                             `json:"memorySizeMiB,omitempty"`
	LinkStatus    *MemoryDeviceInformationLinkStatus `json:"linkStatus,omitempty"`
	// The state of the resource
	StatusState *string `json:"statusState,omitempty"`
}

// NewMemoryDeviceInformation instantiates a new MemoryDeviceInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemoryDeviceInformation(id string) *MemoryDeviceInformation {
	this := MemoryDeviceInformation{}
	this.Id = id
	return &this
}

// NewMemoryDeviceInformationWithDefaults instantiates a new MemoryDeviceInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemoryDeviceInformationWithDefaults() *MemoryDeviceInformation {
	this := MemoryDeviceInformation{}
	return &this
}

// GetId returns the Id field value
func (o *MemoryDeviceInformation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MemoryDeviceInformation) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MemoryDeviceInformation) SetId(v string) {
	o.Id = v
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise.
func (o *MemoryDeviceInformation) GetDeviceType() string {
	if o == nil || IsNil(o.DeviceType) {
		var ret string
		return ret
	}
	return *o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryDeviceInformation) GetDeviceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceType) {
		return nil, false
	}
	return o.DeviceType, true
}

// HasDeviceType returns a boolean if a field has been set.
func (o *MemoryDeviceInformation) HasDeviceType() bool {
	if o != nil && !IsNil(o.DeviceType) {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given string and assigns it to the DeviceType field.
func (o *MemoryDeviceInformation) SetDeviceType(v string) {
	o.DeviceType = &v
}

// GetMemorySizeMiB returns the MemorySizeMiB field value if set, zero value otherwise.
func (o *MemoryDeviceInformation) GetMemorySizeMiB() int32 {
	if o == nil || IsNil(o.MemorySizeMiB) {
		var ret int32
		return ret
	}
	return *o.MemorySizeMiB
}

// GetMemorySizeMiBOk returns a tuple with the MemorySizeMiB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryDeviceInformation) GetMemorySizeMiBOk() (*int32, bool) {
	if o == nil || IsNil(o.MemorySizeMiB) {
		return nil, false
	}
	return o.MemorySizeMiB, true
}

// HasMemorySizeMiB returns a boolean if a field has been set.
func (o *MemoryDeviceInformation) HasMemorySizeMiB() bool {
	if o != nil && !IsNil(o.MemorySizeMiB) {
		return true
	}

	return false
}

// SetMemorySizeMiB gets a reference to the given int32 and assigns it to the MemorySizeMiB field.
func (o *MemoryDeviceInformation) SetMemorySizeMiB(v int32) {
	o.MemorySizeMiB = &v
}

// GetLinkStatus returns the LinkStatus field value if set, zero value otherwise.
func (o *MemoryDeviceInformation) GetLinkStatus() MemoryDeviceInformationLinkStatus {
	if o == nil || IsNil(o.LinkStatus) {
		var ret MemoryDeviceInformationLinkStatus
		return ret
	}
	return *o.LinkStatus
}

// GetLinkStatusOk returns a tuple with the LinkStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryDeviceInformation) GetLinkStatusOk() (*MemoryDeviceInformationLinkStatus, bool) {
	if o == nil || IsNil(o.LinkStatus) {
		return nil, false
	}
	return o.LinkStatus, true
}

// HasLinkStatus returns a boolean if a field has been set.
func (o *MemoryDeviceInformation) HasLinkStatus() bool {
	if o != nil && !IsNil(o.LinkStatus) {
		return true
	}

	return false
}

// SetLinkStatus gets a reference to the given MemoryDeviceInformationLinkStatus and assigns it to the LinkStatus field.
func (o *MemoryDeviceInformation) SetLinkStatus(v MemoryDeviceInformationLinkStatus) {
	o.LinkStatus = &v
}

// GetStatusState returns the StatusState field value if set, zero value otherwise.
func (o *MemoryDeviceInformation) GetStatusState() string {
	if o == nil || IsNil(o.StatusState) {
		var ret string
		return ret
	}
	return *o.StatusState
}

// GetStatusStateOk returns a tuple with the StatusState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryDeviceInformation) GetStatusStateOk() (*string, bool) {
	if o == nil || IsNil(o.StatusState) {
		return nil, false
	}
	return o.StatusState, true
}

// HasStatusState returns a boolean if a field has been set.
func (o *MemoryDeviceInformation) HasStatusState() bool {
	if o != nil && !IsNil(o.StatusState) {
		return true
	}

	return false
}

// SetStatusState gets a reference to the given string and assigns it to the StatusState field.
func (o *MemoryDeviceInformation) SetStatusState(v string) {
	o.StatusState = &v
}

func (o MemoryDeviceInformation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemoryDeviceInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.DeviceType) {
		toSerialize["deviceType"] = o.DeviceType
	}
	if !IsNil(o.MemorySizeMiB) {
		toSerialize["memorySizeMiB"] = o.MemorySizeMiB
	}
	if !IsNil(o.LinkStatus) {
		toSerialize["linkStatus"] = o.LinkStatus
	}
	if !IsNil(o.StatusState) {
		toSerialize["statusState"] = o.StatusState
	}
	return toSerialize, nil
}

type NullableMemoryDeviceInformation struct {
	value *MemoryDeviceInformation
	isSet bool
}

func (v NullableMemoryDeviceInformation) Get() *MemoryDeviceInformation {
	return v.value
}

func (v *NullableMemoryDeviceInformation) Set(val *MemoryDeviceInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableMemoryDeviceInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableMemoryDeviceInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemoryDeviceInformation(val *MemoryDeviceInformation) *NullableMemoryDeviceInformation {
	return &NullableMemoryDeviceInformation{value: val, isSet: true}
}

func (v NullableMemoryDeviceInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemoryDeviceInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
