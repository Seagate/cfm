/*
Composable Fabric Manager Service OpenAPI

This API allows users to interact through the CFM Service with CXL Hosts and Memory Appliances. The main purpose of this interface is to allow the retrieval of information and the creation and mapping of memory from a Memory Appliance to a CXL host.

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ServiceInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceInformation{}

// ServiceInformation struct for ServiceInformation
type ServiceInformation struct {
	// The cfm-service version
	Version   string            `json:"version"`
	Resources []ServiceResource `json:"resources"`
}

// NewServiceInformation instantiates a new ServiceInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceInformation(version string, resources []ServiceResource) *ServiceInformation {
	this := ServiceInformation{}
	this.Version = version
	this.Resources = resources
	return &this
}

// NewServiceInformationWithDefaults instantiates a new ServiceInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceInformationWithDefaults() *ServiceInformation {
	this := ServiceInformation{}
	return &this
}

// GetVersion returns the Version field value
func (o *ServiceInformation) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ServiceInformation) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ServiceInformation) SetVersion(v string) {
	o.Version = v
}

// GetResources returns the Resources field value
func (o *ServiceInformation) GetResources() []ServiceResource {
	if o == nil {
		var ret []ServiceResource
		return ret
	}

	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value
// and a boolean to check if the value has been set.
func (o *ServiceInformation) GetResourcesOk() ([]ServiceResource, bool) {
	if o == nil {
		return nil, false
	}
	return o.Resources, true
}

// SetResources sets field value
func (o *ServiceInformation) SetResources(v []ServiceResource) {
	o.Resources = v
}

func (o ServiceInformation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["resources"] = o.Resources
	return toSerialize, nil
}

type NullableServiceInformation struct {
	value *ServiceInformation
	isSet bool
}

func (v NullableServiceInformation) Get() *ServiceInformation {
	return v.value
}

func (v *NullableServiceInformation) Set(val *ServiceInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceInformation(val *ServiceInformation) *NullableServiceInformation {
	return &NullableServiceInformation{value: val, isSet: true}
}

func (v NullableServiceInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
