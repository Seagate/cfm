/*
Composable Fabric Manager Service OpenAPI

This API allows users to interact through the CFM Service with CXL Hosts and Memory Appliances. The main purpose of this interface is to allow the retrieval of information and the creation and mapping of memory from a Memory Appliance to a CXL host.

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the Credentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Credentials{}

// Credentials struct for Credentials
type Credentials struct {
	// The username credentials used to communicate with another service
	Username string `json:"username"`
	// The password credentials used to communicate with another service
	Password string `json:"password"`
	// The IP Address in dot notation of the service
	IpAddress string `json:"ipAddress"`
	Port      int32  `json:"port"`
	// Set to true if an insecure connection should be used
	Insecure *bool `json:"insecure,omitempty"`
	// Examples of http vs https
	Protocol *string `json:"protocol,omitempty"`
	// Examples of backend
	Backend *string `json:"backend,omitempty"`
	// A user-defined string to uniquely identify an individual endpoint device.
	CustomId *string `json:"customId,omitempty"`
}

// NewCredentials instantiates a new Credentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentials(username string, password string, ipAddress string, port int32) *Credentials {
	this := Credentials{}
	this.Username = username
	this.Password = password
	this.IpAddress = ipAddress
	this.Port = port
	var insecure bool = false
	this.Insecure = &insecure
	var protocol string = "https"
	this.Protocol = &protocol
	var backend string = "httpfish"
	this.Backend = &backend
	return &this
}

// NewCredentialsWithDefaults instantiates a new Credentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialsWithDefaults() *Credentials {
	this := Credentials{}
	var insecure bool = false
	this.Insecure = &insecure
	var protocol string = "https"
	this.Protocol = &protocol
	var backend string = "httpfish"
	this.Backend = &backend
	return &this
}

// GetUsername returns the Username field value
func (o *Credentials) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *Credentials) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *Credentials) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *Credentials) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *Credentials) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *Credentials) SetPassword(v string) {
	o.Password = v
}

// GetIpAddress returns the IpAddress field value
func (o *Credentials) GetIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *Credentials) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *Credentials) SetIpAddress(v string) {
	o.IpAddress = v
}

// GetPort returns the Port field value
func (o *Credentials) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *Credentials) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *Credentials) SetPort(v int32) {
	o.Port = v
}

// GetInsecure returns the Insecure field value if set, zero value otherwise.
func (o *Credentials) GetInsecure() bool {
	if o == nil || IsNil(o.Insecure) {
		var ret bool
		return ret
	}
	return *o.Insecure
}

// GetInsecureOk returns a tuple with the Insecure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Credentials) GetInsecureOk() (*bool, bool) {
	if o == nil || IsNil(o.Insecure) {
		return nil, false
	}
	return o.Insecure, true
}

// HasInsecure returns a boolean if a field has been set.
func (o *Credentials) HasInsecure() bool {
	if o != nil && !IsNil(o.Insecure) {
		return true
	}

	return false
}

// SetInsecure gets a reference to the given bool and assigns it to the Insecure field.
func (o *Credentials) SetInsecure(v bool) {
	o.Insecure = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *Credentials) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Credentials) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *Credentials) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *Credentials) SetProtocol(v string) {
	o.Protocol = &v
}

// GetBackend returns the Backend field value if set, zero value otherwise.
func (o *Credentials) GetBackend() string {
	if o == nil || IsNil(o.Backend) {
		var ret string
		return ret
	}
	return *o.Backend
}

// GetBackendOk returns a tuple with the Backend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Credentials) GetBackendOk() (*string, bool) {
	if o == nil || IsNil(o.Backend) {
		return nil, false
	}
	return o.Backend, true
}

// HasBackend returns a boolean if a field has been set.
func (o *Credentials) HasBackend() bool {
	if o != nil && !IsNil(o.Backend) {
		return true
	}

	return false
}

// SetBackend gets a reference to the given string and assigns it to the Backend field.
func (o *Credentials) SetBackend(v string) {
	o.Backend = &v
}

// GetCustomId returns the CustomId field value if set, zero value otherwise.
func (o *Credentials) GetCustomId() string {
	if o == nil || IsNil(o.CustomId) {
		var ret string
		return ret
	}
	return *o.CustomId
}

// GetCustomIdOk returns a tuple with the CustomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Credentials) GetCustomIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomId) {
		return nil, false
	}
	return o.CustomId, true
}

// HasCustomId returns a boolean if a field has been set.
func (o *Credentials) HasCustomId() bool {
	if o != nil && !IsNil(o.CustomId) {
		return true
	}

	return false
}

// SetCustomId gets a reference to the given string and assigns it to the CustomId field.
func (o *Credentials) SetCustomId(v string) {
	o.CustomId = &v
}

func (o Credentials) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Credentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["username"] = o.Username
	toSerialize["password"] = o.Password
	toSerialize["ipAddress"] = o.IpAddress
	toSerialize["port"] = o.Port
	if !IsNil(o.Insecure) {
		toSerialize["insecure"] = o.Insecure
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.Backend) {
		toSerialize["backend"] = o.Backend
	}
	if !IsNil(o.CustomId) {
		toSerialize["customId"] = o.CustomId
	}
	return toSerialize, nil
}

type NullableCredentials struct {
	value *Credentials
	isSet bool
}

func (v NullableCredentials) Get() *Credentials {
	return v.value
}

func (v *NullableCredentials) Set(val *Credentials) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentials(val *Credentials) *NullableCredentials {
	return &NullableCredentials{value: val, isSet: true}
}

func (v NullableCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
