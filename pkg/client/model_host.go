/*
Composable Fabric Manager Service OpenAPI

This API allows users to interact through the CFM Service with CXL Hosts and Memory Appliances. The main purpose of this interface is to allow the retrieval of information and the creation and mapping of memory from a Memory Appliance to a CXL host.

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the Host type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Host{}

// Host struct for Host
type Host struct {
	// The id uniquely identifies the resource within a resource collection. Since URIs are constructed with ids, must not contain RFC1738 unsafe characters.
	Id string `json:"id"`
	// The IP Address in dot notation of the service
	IpAddress string `json:"ipAddress"`
	Port      int32  `json:"port"`
	// A response string
	Status        *string     `json:"status,omitempty"`
	Ports         *MemberItem `json:"ports,omitempty"`
	MemoryDevices *MemberItem `json:"memory-devices,omitempty"`
	Memory        *MemberItem `json:"memory,omitempty"`
	// A mebibyte equals 2**20 or 1,048,576 bytes.
	LocalMemoryMiB *int32 `json:"localMemoryMiB,omitempty"`
	// A mebibyte equals 2**20 or 1,048,576 bytes.
	RemoteMemoryMiB *int32 `json:"remoteMemoryMiB,omitempty"`
}

// NewHost instantiates a new Host object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHost(id string, ipAddress string, port int32) *Host {
	this := Host{}
	this.Id = id
	this.IpAddress = ipAddress
	this.Port = port
	return &this
}

// NewHostWithDefaults instantiates a new Host object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostWithDefaults() *Host {
	this := Host{}
	return &this
}

// GetId returns the Id field value
func (o *Host) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Host) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Host) SetId(v string) {
	o.Id = v
}

// GetIpAddress returns the IpAddress field value
func (o *Host) GetIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *Host) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *Host) SetIpAddress(v string) {
	o.IpAddress = v
}

// GetPort returns the Port field value
func (o *Host) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *Host) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *Host) SetPort(v int32) {
	o.Port = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Host) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Host) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Host) SetStatus(v string) {
	o.Status = &v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *Host) GetPorts() MemberItem {
	if o == nil || IsNil(o.Ports) {
		var ret MemberItem
		return ret
	}
	return *o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetPortsOk() (*MemberItem, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *Host) HasPorts() bool {
	if o != nil && !IsNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given MemberItem and assigns it to the Ports field.
func (o *Host) SetPorts(v MemberItem) {
	o.Ports = &v
}

// GetMemoryDevices returns the MemoryDevices field value if set, zero value otherwise.
func (o *Host) GetMemoryDevices() MemberItem {
	if o == nil || IsNil(o.MemoryDevices) {
		var ret MemberItem
		return ret
	}
	return *o.MemoryDevices
}

// GetMemoryDevicesOk returns a tuple with the MemoryDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetMemoryDevicesOk() (*MemberItem, bool) {
	if o == nil || IsNil(o.MemoryDevices) {
		return nil, false
	}
	return o.MemoryDevices, true
}

// HasMemoryDevices returns a boolean if a field has been set.
func (o *Host) HasMemoryDevices() bool {
	if o != nil && !IsNil(o.MemoryDevices) {
		return true
	}

	return false
}

// SetMemoryDevices gets a reference to the given MemberItem and assigns it to the MemoryDevices field.
func (o *Host) SetMemoryDevices(v MemberItem) {
	o.MemoryDevices = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *Host) GetMemory() MemberItem {
	if o == nil || IsNil(o.Memory) {
		var ret MemberItem
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetMemoryOk() (*MemberItem, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *Host) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given MemberItem and assigns it to the Memory field.
func (o *Host) SetMemory(v MemberItem) {
	o.Memory = &v
}

// GetLocalMemoryMiB returns the LocalMemoryMiB field value if set, zero value otherwise.
func (o *Host) GetLocalMemoryMiB() int32 {
	if o == nil || IsNil(o.LocalMemoryMiB) {
		var ret int32
		return ret
	}
	return *o.LocalMemoryMiB
}

// GetLocalMemoryMiBOk returns a tuple with the LocalMemoryMiB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetLocalMemoryMiBOk() (*int32, bool) {
	if o == nil || IsNil(o.LocalMemoryMiB) {
		return nil, false
	}
	return o.LocalMemoryMiB, true
}

// HasLocalMemoryMiB returns a boolean if a field has been set.
func (o *Host) HasLocalMemoryMiB() bool {
	if o != nil && !IsNil(o.LocalMemoryMiB) {
		return true
	}

	return false
}

// SetLocalMemoryMiB gets a reference to the given int32 and assigns it to the LocalMemoryMiB field.
func (o *Host) SetLocalMemoryMiB(v int32) {
	o.LocalMemoryMiB = &v
}

// GetRemoteMemoryMiB returns the RemoteMemoryMiB field value if set, zero value otherwise.
func (o *Host) GetRemoteMemoryMiB() int32 {
	if o == nil || IsNil(o.RemoteMemoryMiB) {
		var ret int32
		return ret
	}
	return *o.RemoteMemoryMiB
}

// GetRemoteMemoryMiBOk returns a tuple with the RemoteMemoryMiB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Host) GetRemoteMemoryMiBOk() (*int32, bool) {
	if o == nil || IsNil(o.RemoteMemoryMiB) {
		return nil, false
	}
	return o.RemoteMemoryMiB, true
}

// HasRemoteMemoryMiB returns a boolean if a field has been set.
func (o *Host) HasRemoteMemoryMiB() bool {
	if o != nil && !IsNil(o.RemoteMemoryMiB) {
		return true
	}

	return false
}

// SetRemoteMemoryMiB gets a reference to the given int32 and assigns it to the RemoteMemoryMiB field.
func (o *Host) SetRemoteMemoryMiB(v int32) {
	o.RemoteMemoryMiB = &v
}

func (o Host) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Host) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["ipAddress"] = o.IpAddress
	toSerialize["port"] = o.Port
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}
	if !IsNil(o.MemoryDevices) {
		toSerialize["memory-devices"] = o.MemoryDevices
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.LocalMemoryMiB) {
		toSerialize["localMemoryMiB"] = o.LocalMemoryMiB
	}
	if !IsNil(o.RemoteMemoryMiB) {
		toSerialize["remoteMemoryMiB"] = o.RemoteMemoryMiB
	}
	return toSerialize, nil
}

type NullableHost struct {
	value *Host
	isSet bool
}

func (v NullableHost) Get() *Host {
	return v.value
}

func (v *NullableHost) Set(val *Host) {
	v.value = val
	v.isSet = true
}

func (v NullableHost) IsSet() bool {
	return v.isSet
}

func (v *NullableHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHost(val *Host) *NullableHost {
	return &NullableHost{value: val, isSet: true}
}

func (v NullableHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
