/*
Composable Fabric Manager Service OpenAPI

This API allows users to interact through the CFM Service with CXL Hosts and Memory Appliances. The main purpose of this interface is to allow the retrieval of information and the creation and mapping of memory from a Memory Appliance to a CXL host.

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PortInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortInformation{}

// PortInformation struct for PortInformation
type PortInformation struct {
	// The id of this resource
	Id string `json:"id"`
	// The global CXL identifier
	GCxlId *string `json:"gCxlId,omitempty"`
	// A full path to the resource with id as the last component
	LinkedPortUri *string `json:"linkedPortUri,omitempty"`
	// The protocol being sent over this port
	PortProtocol *string `json:"portProtocol,omitempty"`
	// The physical connection medium for this port
	PortMedium *string `json:"portMedium,omitempty"`
	// The current speed of this port
	CurrentSpeedGbps *int32 `json:"currentSpeedGbps,omitempty"`
	// The health of the resource
	StatusHealth string `json:"statusHealth"`
	// The state of the resource
	StatusState string `json:"statusState"`
	// The number of lanes, phys, or other physical transport links that this port contains
	Width *int32 `json:"width,omitempty"`
	// Status of the link, such as LinkUp or LinkDown
	LinkStatus *string `json:"linkStatus,omitempty"`
}

// NewPortInformation instantiates a new PortInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortInformation(id string, statusHealth string, statusState string) *PortInformation {
	this := PortInformation{}
	this.Id = id
	this.StatusHealth = statusHealth
	this.StatusState = statusState
	return &this
}

// NewPortInformationWithDefaults instantiates a new PortInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortInformationWithDefaults() *PortInformation {
	this := PortInformation{}
	return &this
}

// GetId returns the Id field value
func (o *PortInformation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PortInformation) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PortInformation) SetId(v string) {
	o.Id = v
}

// GetGCxlId returns the GCxlId field value if set, zero value otherwise.
func (o *PortInformation) GetGCxlId() string {
	if o == nil || IsNil(o.GCxlId) {
		var ret string
		return ret
	}
	return *o.GCxlId
}

// GetGCxlIdOk returns a tuple with the GCxlId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortInformation) GetGCxlIdOk() (*string, bool) {
	if o == nil || IsNil(o.GCxlId) {
		return nil, false
	}
	return o.GCxlId, true
}

// HasGCxlId returns a boolean if a field has been set.
func (o *PortInformation) HasGCxlId() bool {
	if o != nil && !IsNil(o.GCxlId) {
		return true
	}

	return false
}

// SetGCxlId gets a reference to the given string and assigns it to the GCxlId field.
func (o *PortInformation) SetGCxlId(v string) {
	o.GCxlId = &v
}

// GetLinkedPortUri returns the LinkedPortUri field value if set, zero value otherwise.
func (o *PortInformation) GetLinkedPortUri() string {
	if o == nil || IsNil(o.LinkedPortUri) {
		var ret string
		return ret
	}
	return *o.LinkedPortUri
}

// GetLinkedPortUriOk returns a tuple with the LinkedPortUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortInformation) GetLinkedPortUriOk() (*string, bool) {
	if o == nil || IsNil(o.LinkedPortUri) {
		return nil, false
	}
	return o.LinkedPortUri, true
}

// HasLinkedPortUri returns a boolean if a field has been set.
func (o *PortInformation) HasLinkedPortUri() bool {
	if o != nil && !IsNil(o.LinkedPortUri) {
		return true
	}

	return false
}

// SetLinkedPortUri gets a reference to the given string and assigns it to the LinkedPortUri field.
func (o *PortInformation) SetLinkedPortUri(v string) {
	o.LinkedPortUri = &v
}

// GetPortProtocol returns the PortProtocol field value if set, zero value otherwise.
func (o *PortInformation) GetPortProtocol() string {
	if o == nil || IsNil(o.PortProtocol) {
		var ret string
		return ret
	}
	return *o.PortProtocol
}

// GetPortProtocolOk returns a tuple with the PortProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortInformation) GetPortProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.PortProtocol) {
		return nil, false
	}
	return o.PortProtocol, true
}

// HasPortProtocol returns a boolean if a field has been set.
func (o *PortInformation) HasPortProtocol() bool {
	if o != nil && !IsNil(o.PortProtocol) {
		return true
	}

	return false
}

// SetPortProtocol gets a reference to the given string and assigns it to the PortProtocol field.
func (o *PortInformation) SetPortProtocol(v string) {
	o.PortProtocol = &v
}

// GetPortMedium returns the PortMedium field value if set, zero value otherwise.
func (o *PortInformation) GetPortMedium() string {
	if o == nil || IsNil(o.PortMedium) {
		var ret string
		return ret
	}
	return *o.PortMedium
}

// GetPortMediumOk returns a tuple with the PortMedium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortInformation) GetPortMediumOk() (*string, bool) {
	if o == nil || IsNil(o.PortMedium) {
		return nil, false
	}
	return o.PortMedium, true
}

// HasPortMedium returns a boolean if a field has been set.
func (o *PortInformation) HasPortMedium() bool {
	if o != nil && !IsNil(o.PortMedium) {
		return true
	}

	return false
}

// SetPortMedium gets a reference to the given string and assigns it to the PortMedium field.
func (o *PortInformation) SetPortMedium(v string) {
	o.PortMedium = &v
}

// GetCurrentSpeedGbps returns the CurrentSpeedGbps field value if set, zero value otherwise.
func (o *PortInformation) GetCurrentSpeedGbps() int32 {
	if o == nil || IsNil(o.CurrentSpeedGbps) {
		var ret int32
		return ret
	}
	return *o.CurrentSpeedGbps
}

// GetCurrentSpeedGbpsOk returns a tuple with the CurrentSpeedGbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortInformation) GetCurrentSpeedGbpsOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentSpeedGbps) {
		return nil, false
	}
	return o.CurrentSpeedGbps, true
}

// HasCurrentSpeedGbps returns a boolean if a field has been set.
func (o *PortInformation) HasCurrentSpeedGbps() bool {
	if o != nil && !IsNil(o.CurrentSpeedGbps) {
		return true
	}

	return false
}

// SetCurrentSpeedGbps gets a reference to the given int32 and assigns it to the CurrentSpeedGbps field.
func (o *PortInformation) SetCurrentSpeedGbps(v int32) {
	o.CurrentSpeedGbps = &v
}

// GetStatusHealth returns the StatusHealth field value
func (o *PortInformation) GetStatusHealth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusHealth
}

// GetStatusHealthOk returns a tuple with the StatusHealth field value
// and a boolean to check if the value has been set.
func (o *PortInformation) GetStatusHealthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusHealth, true
}

// SetStatusHealth sets field value
func (o *PortInformation) SetStatusHealth(v string) {
	o.StatusHealth = v
}

// GetStatusState returns the StatusState field value
func (o *PortInformation) GetStatusState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusState
}

// GetStatusStateOk returns a tuple with the StatusState field value
// and a boolean to check if the value has been set.
func (o *PortInformation) GetStatusStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusState, true
}

// SetStatusState sets field value
func (o *PortInformation) SetStatusState(v string) {
	o.StatusState = v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *PortInformation) GetWidth() int32 {
	if o == nil || IsNil(o.Width) {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortInformation) GetWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *PortInformation) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *PortInformation) SetWidth(v int32) {
	o.Width = &v
}

// GetLinkStatus returns the LinkStatus field value if set, zero value otherwise.
func (o *PortInformation) GetLinkStatus() string {
	if o == nil || IsNil(o.LinkStatus) {
		var ret string
		return ret
	}
	return *o.LinkStatus
}

// GetLinkStatusOk returns a tuple with the LinkStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortInformation) GetLinkStatusOk() (*string, bool) {
	if o == nil || IsNil(o.LinkStatus) {
		return nil, false
	}
	return o.LinkStatus, true
}

// HasLinkStatus returns a boolean if a field has been set.
func (o *PortInformation) HasLinkStatus() bool {
	if o != nil && !IsNil(o.LinkStatus) {
		return true
	}

	return false
}

// SetLinkStatus gets a reference to the given string and assigns it to the LinkStatus field.
func (o *PortInformation) SetLinkStatus(v string) {
	o.LinkStatus = &v
}

func (o PortInformation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.GCxlId) {
		toSerialize["gCxlId"] = o.GCxlId
	}
	if !IsNil(o.LinkedPortUri) {
		toSerialize["linkedPortUri"] = o.LinkedPortUri
	}
	if !IsNil(o.PortProtocol) {
		toSerialize["portProtocol"] = o.PortProtocol
	}
	if !IsNil(o.PortMedium) {
		toSerialize["portMedium"] = o.PortMedium
	}
	if !IsNil(o.CurrentSpeedGbps) {
		toSerialize["currentSpeedGbps"] = o.CurrentSpeedGbps
	}
	toSerialize["statusHealth"] = o.StatusHealth
	toSerialize["statusState"] = o.StatusState
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !IsNil(o.LinkStatus) {
		toSerialize["linkStatus"] = o.LinkStatus
	}
	return toSerialize, nil
}

type NullablePortInformation struct {
	value *PortInformation
	isSet bool
}

func (v NullablePortInformation) Get() *PortInformation {
	return v.value
}

func (v *NullablePortInformation) Set(val *PortInformation) {
	v.value = val
	v.isSet = true
}

func (v NullablePortInformation) IsSet() bool {
	return v.isSet
}

func (v *NullablePortInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortInformation(val *PortInformation) *NullablePortInformation {
	return &NullablePortInformation{value: val, isSet: true}
}

func (v NullablePortInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
