// Copyright (c) 2024 Seagate Technology LLC and/or its Affiliates
/*
 * Composable Fabric Manager Service OpenAPI
 *
 * This API allows users to interact through the CFM Service with CXL Hosts and Memory Appliances. The main purpose of this interface is to allow the retrieval of information and the creation and mapping of memory from a Memory Appliance to a CXL host.
 *
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"context"
	"net/http"

	"cfm/pkg/openapi"
	"cfm/pkg/redfishapi"

	"github.com/gorilla/mux"
)

// NewCfmRouter creates a new router for any number of api routers
func NewCfmRouter(ctx context.Context, routers ...openapi.Router) *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, api := range routers {
		for name, route := range api.Routes() {
			var handler http.Handler
			handler = route.HandlerFunc
			handler = CfmLogger(ctx, handler, name)

			router.
				Methods(route.Method).
				Path(route.Pattern).
				Name(name).
				Handler(handler)
		}
	}

	return router
}

// AddRedfishRouter loads the redfish api into the routers
func AddRedfishRouter(ctx context.Context, router *mux.Router, routers ...redfishapi.Router) *mux.Router {
	for _, api := range routers {
		for name, route := range api.Routes() {
			var handler http.Handler
			handler = route.HandlerFunc
			handler = CfmLogger(ctx, handler, name)

			router.
				Methods(route.Method).
				Path(route.Pattern).
				Name(name).
				Handler(handler)
		}
	}

	return router
}
